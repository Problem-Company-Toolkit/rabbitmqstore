# This workflow will build and test a golang project with RabbitMQ
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go with RabbitMQ

on:
  push:
    branches: [ "*" ]
  # pull_request:
    # branches: [ "main" ]
  workflow_dispatch: {} # support manual runs

jobs:
  test:
    runs-on: ubuntu-latest

    # Define RabbitMQ service container
    services:
      rabbitmq:
        # Docker Hub image
        image: rabbitmq:3.9.29-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: user
          RABBITMQ_DEFAULT_PASS: pass
        ports:
          # Maps tcp port 5672 on service container to the host
          - 5672:5672
        # Set health checks to wait until RabbitMQ has started
        options: >-
          --hostname rabbitmq
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.3'

    - name: Install Dependencies
      run: make dependencies
      shell: bash

    - name: Install Test Dependencies
      run: make test-dependencies
      shell: bash

    - name: Test
      run: make test
      env:
        RABBITMQ_DEFAULT_USER: user
        RABBITMQ_DEFAULT_PASS: pass
        RABBITMQ_HOST: localhost
        RABBITMQ_PORT: 5672

    - name: Repetitive Tests
      run: make test-repetitions
      env:
        RABBITMQ_DEFAULT_USER: user
        RABBITMQ_DEFAULT_PASS: pass
        RABBITMQ_HOST: localhost
        RABBITMQ_PORT: 5672